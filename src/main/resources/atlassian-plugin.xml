<atlassian-plugin key="${project.groupId}.${project.artifactId}" name="${project.name}" plugins-version="2">
    <plugin-info>
        <description>${project.description}</description>
        <version>${project.version}</version>
        <vendor name="${project.organization.name}" url="${project.organization.url}" />
    </plugin-info>

    <component-import key="i18nService" interface="com.atlassian.bitbucket.i18n.I18nService"/>
    <component-import key="userService" interface="com.atlassian.bitbucket.user.UserService"/>

    <component key="authHandler" class="team.effort.bitbucket.auth.BitbucketSAMLHandler"/>

    <http-auth-handler key="containerAuthenticationHandler"
                       class="bean:authHandler"
                       weight="100"/>

    <http-auth-success-handler key="containerAuthenticationSuccessHandler"
                               class="bean:authHandler"
                               weight="50"/>

    <!-- Redirect Servlet to make sure user is directed to it's requested destination before authentication -->
    <servlet name="Bitbucket SAML Redirect Servlet" key="bitbucketsamlredirect" class="team.effort.bitbucket.auth.BitbucketSAMLRedirectServlet">
        <description>Redirects User requests to desired destination within Bitbucket</description>
        <url-pattern>/bitbucketsamlredirect</url-pattern>
    </servlet>

    <servlet-filter name="Bitbucket SAML Login Filter" key="bitbucketloginfilter" location="before-login" class="team.effort.bitbucket.auth.BitbucketSAMLLoginFilter" weight="0">
        <description>Denies user non-SSO authentication if tried to bypass login dialog.</description>
        <url-pattern>/login*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </servlet-filter>
</atlassian-plugin>